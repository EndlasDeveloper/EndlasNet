#pragma checksum "C:\Users\EndlasLaptop2\Desktop\EndlasNet\EndlasNet\EndlasNet.Web\Views\Home\Issues.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "89e129c7a2fd0de608bac374f981404cefa7a46b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Issues), @"mvc.1.0.view", @"/Views/Home/Issues.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\EndlasLaptop2\Desktop\EndlasNet\EndlasNet\EndlasNet.Web\Views\_ViewImports.cshtml"
using EndlasNet.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\EndlasLaptop2\Desktop\EndlasNet\EndlasNet\EndlasNet.Web\Views\_ViewImports.cshtml"
using EndlasNet.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"89e129c7a2fd0de608bac374f981404cefa7a46b", @"/Views/Home/Issues.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b56846bc26cdbd87384895e8a386d772c1991b0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Issues : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/custom-style.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "89e129c7a2fd0de608bac374f981404cefa7a46b4152", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<style type=\"text/css\" media=\"screen\">\r\n\r\n    #patch-notes-li{\r\n        margin-top:5px\r\n    }\r\n\r\n</style>\r\n");
#nullable restore
#line 9 "C:\Users\EndlasLaptop2\Desktop\EndlasNet\EndlasNet\EndlasNet.Web\Views\Home\Issues.cshtml"
  
    ViewData["Title"] = "Update notes";

#line default
#line hidden
#nullable disable
            WriteLiteral("<h1 class=\"display-4\">");
#nullable restore
#line 12 "C:\Users\EndlasLaptop2\Desktop\EndlasNet\EndlasNet\EndlasNet.Web\Views\Home\Issues.cshtml"
                 Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h1>\r\n\r\n<p>\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"    <div style=""color:white;font-size:18px;"">Finished tasks</div>
    <ul style=""font-size:14px;line-height:200%;"">
        <li class=""patch-notes-li"">
            Added FinishDrawing to StaticPartInfo.
            FinishDrawing is a pdf file that can save to the db, and the client can download the
            PDF to client device. Downloading is accessed under details for the part information.
            Under delete, Added extra row of data (Has pdf) to indicate whether the pdf is set for
            the part information to delete. Work -> Part information
        </li>

        <li class=""patch-notes-li"">
            Added 'All Parts' action link, controller, and views for showing all parts. Work -> All parts
        </li>
        <li class=""patch-notes-li"">
            Added sort asc-desc for suffix, and filter by work order or job only. Work -> All parts
        </li>
        <li class=""patch-notes-li"">
            Implemented the same mechanics as PartForJob for PartForWorkOrder's view");
            WriteLiteral(@"s. Work -> Part for work order
        </li>
        <li class=""patch-notes-li"">
            Fixed issue where on the dropdown for Job/WO in PartForJob/WO, the dropdown was showing work orders
            in addition the the jobs (and vice-versa). Work -> Job/Work order
        </li>
        <li class=""patch-notes-li"">
            Under PowderOrders -> Manage LineItem -> Manage Powders, fixed the heading (not all the way) to display
            the powder name for quality of life.
        </li>
        <li class=""patch-notes-li"">
            In create MachiningToolForWork view, changed the dropdown for the machining
            tool from  &lt;vendor description&gt; to &lt;vendor description - purchase order number&gt;
        </li>
        <li class=""patch-notes-li"">
            LineItem -> Removed particle size. Added particle size minimum and particle size maximum (to define a range). Changed UI to
            show the range min-max where applicable.
        </li>
        <li class=""patch-");
            WriteLiteral(@"notes-li"">
            PartForJob -> If the foreign key reference to StaticPartInfo already exists in another PartForJob, the suffix
            starts from where the last PartForJob suffix ended.
        </li>
        <li class=""patch-notes-li"">
            On creating a MachiningToolForWork, the referenced MachiningTool.ToolCount decrement still 0.
            There is a stop in place to prevent the tool count from reaching negative values. When the creation of a
            MachiningToolForWork results in a tool count < 0, the user is client if forwarded back to the create page
            with an indicator under the foreign key reference dropdown for machining tool (aka negative tool count is always prevented).
        </li>
        <li class=""patch-notes-li"">
            Realized the list of machining tools in the dropdown could be filtered by tool count > 0 before rendering. Implemented this.
            Now, only tools with actual tools available are populated in the dropdown for machining ");
            WriteLiteral(@"tool.
        </li>
        <li class=""patch-notes-li"">
            Even though the list would only populate with tools with count > 0, it was left a little ambiguious why the list was empty.
            Added a check to indicate why the dropdown list is empty (appears immediately when create view is rendered).
        </li>
    </ul>

");
            WriteLiteral(@"    <div style=""color:white;font-size:18px;"">Todo</div>
    <div>
        <ul style=""font-size:14px;line-height:200%;"">

            <li class=""patch-notes-li"">
                Work on powder for job (might be done because can edit powder weight already).
            </li>
            <li class=""patch-notes-li"">
                In static part info, make the thumbnail open details of the static part info?
            </li>
            <li class=""patch-notes-li"">
                Implement repository pattern for all entities and replace the direct context calls in the controllers.
            </li>
        </ul>
    </div>

");
            WriteLiteral(@"    <div style=""color:white;font-size:18px;"">Bugs and known issues</div>
    <div>
        <ul style=""font-size:14px;line-height:200%;"">
            <li class=""patch-notes-li"">
                Part count is wrong after adding 2 PartsForWork (they both display the 2nd count).
            </li>
            <li class=""patch-notes-li"">
                Some delete views have a UI flaw with the delete button not fitting on one line with action links.
            </li>
            <li class=""patch-notes-li"">
                From LineItem, when the user clicks manage powders, the bottle powder name is correctly set. If the user
                navigates to a child view, and is forwarded back to index, the bottle powder name is no longer set.
            </li>
            <li class=""patch-notes-li"">
                User isn't set for PowderOrders.
            </li>
            <li class=""patch-notes-li"">
                Not all delete views have an indication whether other db items will be deleted as ");
            WriteLiteral(@"a result of the delete.
            </li>
            <li class=""patch-notes-li"">
                When a static part info is created (it has a customer fk reference), and then the customer fk entry is deleted,
                an exception is thrown.
            </li>
            <li class=""patch-notes-li"">
                Some views do not have login protection implemented yet.
            </li>
        </ul>
    </div>

");
            WriteLiteral(@"    <div style=""color:white;font-size:18px;"">Other considerations</div>
    <ul style=""font-size:14px;line-height:200%;"">
        <li class=""patch-notes-li"">
            Implement start suffix for part batch initialization?
        </li>
        <li class=""patch-notes-li"">
            Put a '?' icon on all data access level views (any view that allows user to interact with the db in any way). When clicked,
            show a description of the view's purpose within the context of data access and work flow.
        </li>
        <li class=""patch-notes-li"">
            Look at activity logging (or just logging) in ASP.NET EF Core.
        </li>
        <li class=""patch-notes-li"">
            Look for a coded UI test library.
        </li>
        <li class=""patch-notes-li"">
            Consider paging and which views to implement paging with.
        </li>
        <li class=""patch-notes-li"">
            Consider search bar on views with many rows to filter.
        </li>
        <li class=""");
            WriteLiteral("patch-notes-li\">\r\n            Help tab development.\r\n        </li>\r\n        <li class=\"patch-notes-li\">\r\n            Style upload buttons and enum referenced dropdowns.\r\n        </li>\r\n    </ul>\r\n</p>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
