@using EndlasNet.Data;
@model PaginatedList<PartForWork>

@{
    ViewData["Title"] = "All parts for work";
    var searchString = ViewBag.SearchString;
    var sortOrder = ViewBag.SortOrder;
    var pageNumber = ViewBag.PageNumber;
    var pagList = ViewData["PaginatedList"];
    if (sortOrder != null)
    {
        ViewBag.PageNumber = 1;
    }
    else
    {
        searchString = ViewBag.CurrentFilter;
    }

}
<a asp-action="Work" asp-controller="Home">
    <span>
        <img src="~/img/backArrow.jpg" width="30" height="30" />
        Work
    </span>
</a>
<h3>
    All parts for work
</h3>
<br />

<form asp-action="Index" method="get" >
    <div class="form-actions no-color">
        <p>
            <span>
                Start date:
                <input type="date" name="StartDate" placeholder="'mm/dd/yyyy hr:min:sec'" value="@ViewBag.CurrentStartDate" />
                &nbsp;End date:
                <input type="date" name="EndDate" placeholder="'mm/dd/yyyy hr:min:sec'" value="@ViewBag.CurrentEndDate" />
            </span>
        </p>
        <p>
            <span>
                Customer or part info:
                <input type="text" name="SearchString" placeholder="Customer or part info" value="@ViewBag.CurrentFilter" style="min-width:auto" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to full list</a>
            </span>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <div>
                    Work type
                </div>
                <span style="color:firebrick">
                    <a style="color:firebrick" asp-action="Index" asp-route-sortOrder="@ViewData["WorkTypeJob"]"
                       asp-route-currentFilter="@ViewBag.CurrentFilter" asp-route-startDate="@ViewBag.CurrentStartDate" asp-route-endDate="@ViewBag.CurrentEndDate">Jobs</a>    
                    -
                    <a style="color:firebrick" asp-action="Index" asp-route-sortOrder="@ViewData["WorkTypeWorkOrder"]"
                       asp-route-currentFilter="@ViewBag.CurrentFilter"  asp-route-startDate="@ViewBag.CurrentStartDate" asp-route-endDate="@ViewBag.CurrentEndDate">WorkOrders</a>
                </span>
            </th>
            <th>
                <div>
                    <a style="color:firebrick" asp-action="Index" asp-route-sortOrder="@ViewData["SuffixSortParm"]" asp-route-currentFilter="@ViewBag.CurrentFilter"
                       asp-route-startDate="@ViewBag.CurrentStartDate" asp-route-endDate="@ViewBag.CurrentEndDate">Suffix</a>
                </div>
            </th>
            <th>
                Work due date
            </th>
            <th>
                Condition description
            </th>
            <th>
                Initial weight (lbs)
            </th>
            <th>
                Cladded weight (lbs)
            </th>
            <th>
                Finished weight (lbs)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var dueDate = item.Work.DueDate.Month.ToString() + "/" + item.Work.DueDate.Day.ToString() + "/" + item.Work.DueDate.Year.ToString();
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Suffix)
                </td>
                <td>
                    @dueDate
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConditionDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InitWeight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CladdedWeight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinishedWeight)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.PartForWorkId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.PartForWorkId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.PartForWorkId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
