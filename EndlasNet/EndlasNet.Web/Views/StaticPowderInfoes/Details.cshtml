@model EndlasNet.Data.StaticPowderInfo

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Static powder information</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PowderName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PowderName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Density)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Density)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Composition)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Composition)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FlowRateSlope)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FlowRateSlope)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FlowRateYIntercept)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FlowRateYIntercept)
        </dd>
    </dl>
</div>
<span>
    @if (ViewBag.HasCompositionPdf != null)
    {
        @Html.ActionLink(
            linkText: "Download composition PDF",
            actionName: "DownloadCompositionPdf",
            controllerName: "StaticPowderInfoes",
            routeValues: new { id = ViewBag.id },
            htmlAttributes: null)
    }
    else
    {
        <a>No composition PDF</a>
    }
</span>
<br />
<br />
<div>
    <a asp-action="Edit" asp-route-id="@Model.StaticPowderInfoId">Edit</a> |
    <a asp-action="Index">Back to list</a>
</div>
