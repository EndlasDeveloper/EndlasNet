<link rel="stylesheet" href="~/css/custom-style.css" type="text/css" />

@{
    ViewData["Title"] = "Issues and todo";
}
<h1 class="display-4">@ViewData["Title"]</h1>

<p>
    @* ****** WHAT CHANGED ****** *@
    <div style="color:white;font-size:18px;">What changed</div>
    <div>
        <ul style="font-size:14px;line-height:200%;">
        </ul>
    </div>

    @* ****** TODO ****** *@
    <div style="color:white;font-size:18px;">Todo</div>
    <div>
        <ul style="font-size:14px;line-height:200%;">
            <li>
                Implement the same mechanics as PartForJob for PartForWorkOrder's views.
            </li>
            <li>
                PartForJob -> If the foreign key reference to StaticPartInfo already exists in another PartForJob, the suffix should
                start from where the last PartForJob suffix ended.
            </li>
            <li>
                Add FinishDrawing to StaticPartInfo. FinishDrawing is a pdf file that should be able to save to the db, and the user
                should be able to download the pdf to the client device.
            </li>
            <li>
                On creating a MachiningToolForWork, the referenced MachiningTool.ToolCount should decrement till 0. Somehow prevent user from
                using tools that don't exist (negative numbers).
            </li>
            <li>
                Work on powder for job (might be done because can edit powder weight already).
            </li>
            <li>
                In static part info, make the thumbnail open details of the static part info.
            </li>
            <li>
                Implement repository pattern for all entities and replace the direct context calls in the controllers.
            </li>

        </ul>
    </div>

    @* ****** KNOWN ISSUES ****** *@
    <div style="color:white;font-size:18px;">Known issues</div>
    <div>
        <ul style="font-size:14px;line-height:200%;">
            <li>
                When a static part info is created (it has a customer fk reference), and then the customer fk entry is deleted,
                an exception is thrown. Currently investigating.
            </li>
            <li>
                Some views do not have login protection implemented yet.
            </li>
            <li>
                On the dropdown for job in part for job, the dropdown will show work orders in addition the the jobs.
            </li>
        </ul>
    </div>

    @* ****** FINISHED TASKS ****** *@
    <div style="color:white;font-size:18px;">Finished tasks</div>
    <ul style="font-size:14px;line-height:200%;">
        <li>
            LineItem -> Removed particle size. Added particle size minimum and particle size maximum (to define a range). Changed UI to 
            show the range min-max where applicable.
        </li>
    </ul>

    @* ****** OTHER CONSIDERATIONS ****** *@
    <div style="color:white;font-size:18px;">Other considerations</div>
    <ul style="font-size:14px;line-height:200%;">
        <li>
            Look at activity logging (or just logging) in ASP.NET EF Core.
        </li>
        <li>
            Look for a coded UI test library.
        </li>
        <li>
            Consider paging and which views to implement paging with.
        </li>
        <li>
            Consider search bar on views with many rows to filter.
        </li>
        <li>
            Help tab development.
        </li>
    </ul>
</p>
