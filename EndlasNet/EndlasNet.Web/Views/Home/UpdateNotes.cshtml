<link rel="stylesheet" href="~/css/custom-style.css" type="text/css" />
<style type="text/css" media="screen">

    #update-notes-li{
        margin-top:5px
    }

</style>
@{
    ViewData["Title"] = "Update notes";
    
}
<h1 class="display-4">@ViewData["Title"] - 5/13/2021</h1>
<p>
    @* ****** FINISHED TASKS ****** *@
    <div style="color:white;font-size:18px;">Finished tasks</div>
    <ul style="font-size:14px;line-height:200%;">

        <li class="update-notes-li">
            Fixed the search functionality of the PartForWork UI (using work due date).
        </li> 

        <li class="update-notes-li">
            All PartForWork view -> search filter -> made search check static part info (drawing number) and customer (customer name). Also, added search due date range. Effect combines.
            Based on which inputs were filled out by the user, the return view prioritizes the attributes shown in the UI index view.
        </li>
        <li class="update-notes-li">
            Fixed issue in job create/edit where the user could submit the form without setting the quote. Also, fixed issue where editing a job would result in losing
            the foreign key reference to the quote it was originally set for.
        </li>
        <li class="update-notes-li">
            Added complete date to work as an attribute. Cannot set from create view, but can from the edit view.
        </li>
        <li class="update-notes-li">
            Updated ERD to show the intended db change to better suit the needs of Work in relation to PartsForWork (and PartForWork's image).
        </li>

    </ul>


    @* ****** TODO ****** *@
    <div style="color:white;font-size:18px;">Todo</div>
    <ul style="font-size:14px;line-height:200%;">
        <li class="update-notes-li">
            All parts for work -> add powder name and lot number to search filter functionality.
        </li>
        <li class="update-notes-li">
            Change part for work to reference image table to save memory. 
        </li>
        <li class="update-notes-li">
            Job -> Add short description to job quote dropdown display.
        </li>
        <li class="update-notes-li">
            Work -> add StartDate and PoDate as nullable attributes.
        </li>
        <li class="update-notes-li">
            PartsForWork -> want functionality to select columns to display then apply multiple to selected columns.
        </li>
        <li class="update-notes-li">
            PartsForJob -> Job part batch -> make name action link to apply attribute value to multiple parts for work. 
        </li>
        <li class="update-notes-li">
            Remove 'hr:min:sec' portion of the due date in all places possible.
        </li>
        <li class="update-notes-li">
            Action tab -> completed work, upload pdf (PackingSlip), work completed date
        </li>
        <li class="update-notes-li">
            Job -> edit -> make quote reference persist. Probably add some indication of what the current quote reference is.
        </li>
        <li class="update-notes-li">
            Jobs -> add number of line items to define upon work creation. 
        </li>
        <li class="update-notes-li">
            Work -> add CompletedDate attribute. 
        </li>

        <li class="update-notes-li">
            Keep writing Moq tests now that the controllers that are important accept an interface repo as a parameter.
        </li>
        
        <li class="update-notes-li">
            PowderForPart -> allow to choose year to filter by.
        </li>
        <li class="update-notes-li">
            Summary of powders by lot number.
        </li>
        <li class="update-notes-li">
            Start looking at making reports from database data.
        </li>
        <li class="update-notes-li">
            Write unit tests for all of the Utility methods. Write unit tests for the controllers.
        </li>

    </ul>

    @* ****** KNOWN ISSUES ****** *@
    <!--<div style="color:white;font-size:18px;">Bugs and known issues</div>
        <ul style="font-size:14px;line-height:200%;">
                <li class="update-notes-li">
            Make form minimum width a little wider for form pages.
        </li>
            <li class="update-notes-li">
                Some delete views have a UI flaw with the delete button not fitting on one line with action links.
            </li>
            <li class="update-notes-li">
                From LineItem, when the user clicks manage powders, the bottle powder name is correctly set. If the user
                navigates to a child view, and is forwarded back to index, the bottle powder name is no longer set.
            </li>
            <li class="update-notes-li">
                User isn't set for PowderOrders.
            </li>
            <li class="update-notes-li">
                Not all delete views have an indication whether other db items will be deleted as a result of the delete.
            </li>
            <li class="update-notes-li">
                When a static part info is created (it has a customer fk reference), and then the customer fk entry is deleted,
                an exception is thrown.
            </li>
            <li class="update-notes-li">
                Some views do not have login protection implemented yet.
            </li>
        </ul>-->
    @* ****** OTHER CONSIDERATIONS ****** *@
    <!--<div style="color:white;font-size:18px;">Other considerations</div>
    <ul style="font-size:14px;line-height:200%;">
        <li class="update-notes-li">
            Under create and edit view, mark elements that are optional/required.
        </li>
        <li class="update-notes-li">
            Implement start suffix for part batch initialization?
        </li>
        <li class="update-notes-li">
            Put a '?' icon on all data access level views (any view that allows user to interact with the db in any way). When clicked,
            show a description of the view's purpose within the context of data access and work flow.
        </li>
        <li class="update-notes-li">
            Look at activity logging (or just logging) in ASP.NET EF Core.
        </li>
        <li class="update-notes-li">
            Look for a coded UI test library.
        </li>
        <li class="update-notes-li">
            Consider paging and which views to implement paging with.
        </li>
        <li class="update-notes-li">
            Consider search bar on views with many rows to filter.
        </li>
        <li class="update-notes-li">
            Help tab development.
        </li>
        <li class="update-notes-li">
            Style upload buttons and enum referenced dropdowns.
        </li>
    </ul>-->
</p>
