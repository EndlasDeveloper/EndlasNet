<link rel="stylesheet" href="~/css/custom-style.css" type="text/css" />
<style type="text/css" media="screen">

    #update-notes-li{
        margin-top:5px
    }

</style>
@{
    ViewData["Title"] = "Update notes";
    
}
<h1 class="display-4">@ViewData["Title"] - 6/xx/2021</h1>
<p>
    @* ****** FINISHED TASKS ****** *@
    <div style="color:white;font-size:18px;">Finished tasks</div>
    <ul style="font-size:14px;line-height:200%;">
        <li class="update-notes-li">
            Added Report tab to front-end with action links for Inventory, Jobs and work orders, and Parts.
        </li>
        <li class="update-notes-li">
            Redo back-end structure from Work -> PartForWork to Work -> WorkItem -> PartForWork.
            (This is partly done - just need to remove the old entity relationships after fron-end is complete)
        </li>
        <li class="update-notes-li">
            Redo front-end structure to represent Work -> WorkItem -> PartForWork from Work -> PartForWork
            <ul>
                <li>
                    Work -> Added manage work items action link to jobs index.
                </li>
                <li>
                    Work -> Added number of work items to  the UI for job create. Successfully creates the defined number of child work item entities for 
                    the parent work (job). 
                </li>
                <li>
                    Work -> manage work items action link forwards user to work items index view. The index shows the work items for the row selected under jobs.
                    If the work item row is uninitialized, the row information will display starts and the  UI only allows for initializataion under each row. 
                </li>
                <li>
                    WorkItem -> Added initialize view. Currently doesn't have any forms to fill out, but on submit, the row attribute IsInitiazed is set to true and saved.
                    The UI correctly displays the alternate row display option where Edit, Details, and Unitialize action links are shown.
                </li>
                <li>
                    WorkItem -> Index view -> Added views for Edit, Details, and Unitialize.
                </li>
                <li>
                    WorkItem -> Added viewes for initialize and uninitialize (similar to line items). Added form elements to initialize view for static part info and and number of parts.
                </li>
                <li>
                    WorkItem -> Initialize -> On submit, the work item is initialized (attribute set in db). Index view changes to show attributes after initialization.
                </li>
            </ul>
        </li>
    </ul>


    @* ****** TODO ****** *@
    <div style="color:white;font-size:18px;">Todo</div>
    <ul style="font-size:14px;line-height:200%;">
        <li class="update-notes-li">
            Decided that the work -> work item -> part for work front-end UI mechanics should function similar to powder order -> line item -> powder bottle work flow.
        </li>
        <li class="update-notes-li">
            Fix issue under inventory -> all powder
        </li>
        <li class="update-notes-li">
            Fix all parts for work (it broke because of the last deploy's changes)
        </li>
        <li class="update-notes-li">
            All parts for work -> add powder name and lot number to search filter functionality.
        </li>
        <li class="update-notes-li">
            PartsForWork -> want functionality to select columns to display then apply multiple to selected columns.
        </li>
        <li class="update-notes-li">
            PartsForJob -> Job part batch -> make name action link to apply attribute value to multiple parts for work. 
        </li>
        <li class="update-notes-li">
            Remove 'hr:min:sec' portion of the due date in all places possible.
        </li>
        <li class="update-notes-li">
            Action tab -> completed work, upload pdf (PackingSlip), work completed date
        </li>

        <li class="update-notes-li">
            Keep writing Moq tests now that the controllers that are important accept an interface repo as a parameter.
        </li>
        <li class="update-notes-li">
            PowderForPart -> allow to choose year to filter by.
        </li>
        <li class="update-notes-li">
            Summary of powders by lot number.
        </li>
        <li class="update-notes-li">
            Start looking at making reports from database data.
        </li>
        <li class="update-notes-li">
            Write unit tests for all of the Utility methods. Write unit tests for the controllers.
        </li>

    </ul>

    @* ****** KNOWN ISSUES ****** *@
    <!--<div style="color:white;font-size:18px;">Bugs and known issues</div>
        <ul style="font-size:14px;line-height:200%;">
                <li class="update-notes-li">
            Make form minimum width a little wider for form pages.
        </li>
            <li class="update-notes-li">
                Some delete views have a UI flaw with the delete button not fitting on one line with action links.
            </li>
            <li class="update-notes-li">
                From LineItem, when the user clicks manage powders, the bottle powder name is correctly set. If the user
                navigates to a child view, and is forwarded back to index, the bottle powder name is no longer set.
            </li>
            <li class="update-notes-li">
                User isn't set for PowderOrders.
            </li>
            <li class="update-notes-li">
                Not all delete views have an indication whether other db items will be deleted as a result of the delete.
            </li>
            <li class="update-notes-li">
                When a static part info is created (it has a customer fk reference), and then the customer fk entry is deleted,
                an exception is thrown.
            </li>
            <li class="update-notes-li">
                Some views do not have login protection implemented yet.
            </li>
        </ul>-->
    @* ****** OTHER CONSIDERATIONS ****** *@
    <!--<div style="color:white;font-size:18px;">Other considerations</div>
    <ul style="font-size:14px;line-height:200%;">
        <li class="update-notes-li">
            Under create and edit view, mark elements that are optional/required.
        </li>
        <li class="update-notes-li">
            Implement start suffix for part batch initialization?
        </li>
        <li class="update-notes-li">
            Put a '?' icon on all data access level views (any view that allows user to interact with the db in any way). When clicked,
            show a description of the view's purpose within the context of data access and work flow.
        </li>
        <li class="update-notes-li">
            Look at activity logging (or just logging) in ASP.NET EF Core.
        </li>
        <li class="update-notes-li">
            Look for a coded UI test library.
        </li>
        <li class="update-notes-li">
            Consider paging and which views to implement paging with.
        </li>
        <li class="update-notes-li">
            Consider search bar on views with many rows to filter.
        </li>
        <li class="update-notes-li">
            Help tab development.
        </li>
        <li class="update-notes-li">
            Style upload buttons and enum referenced dropdowns.
        </li>
    </ul>-->
</p>
