<link rel="stylesheet" href="~/css/custom-style.css" type="text/css" />
<style type="text/css" media="screen">

    #update-notes-li{
        margin-top:5px
    }

</style>
@{
    ViewData["Title"] = "Update notes";
    
}
<h1 class="display-4">@ViewData["Title"] - 7/6/2021</h1>
<p>
    @* ****** FINISHED TASKS ****** *@
    <div style="color:white;font-size:18px;">Finished tasks</div>
    <ul style="font-size:14px;line-height:200%;">
       <li class="update-notes-li">
           Changed work item start date and complete date to display date started and date completed in the UI. If dates aren't set,
           a NO ENTRY message appears where it used to be blank (this was making the UI look jankey).
        </li>
        <li class="update-notes-li">
            Moved all methods from IJobRepo and IWorkOrderRepo into IWorkRepo. Changed the job controller to use the IWorkRepo instead of the 
            previously used IJobRepo. This change will make it easier to selectively perform CRUD operations on any work entity
            (regardless of job or work order). Works as intended.
        </li>
        <li class="update-notes-li">
            Removed user from powder bottle entity class (can add back later as a shadow attribute- it is causing problems enforcing the foreign
            key constraint on so many different tables). Found issue in powder for parts where the work items that are displayed in the dropdown
            need to be initialized. Also, the powder bottles aren't populating in the powder bottle dropdown for putting powder to parts.
        </li>
        <li class="update-notes-li">
            Fixed issue where work items were appearing in the dropdown for getting parts when they weren't initialized. This was causing an exception
            to be thrown. Now dropdown doesn't fill with uninitialized work items. 
        </li>

        <li class="update-notes-li">
            Repaired powder for parts functionality (that was broken from the work item table addition).
            Fixed issue in powder for parts where when user wouldn't select a part and would click submit, the user would be forwarded back to the page
            but none of the form elements were appearing upon the page rerender. Now all error messages appear as they should and all for elements are
            available for user selection.
        </li>
        <li class="update-notes-li">
            Removed all children classes for MachiningToolForWork (aka for job, for job blanking, etc.). Removed all the db sets from the context that 
            referenced the child classes. Removed all the repositories associated with the children classes. Removed all references in Startup.cs to the
            child class repos that were removed.

        </li>
        <li class="update-notes-li">
            Fixed issue where machining tool for work wasn't deleting.
        </li>
        <li>
            Removed more unnecessary data model classes that were used for distinguishing from job and work order. Removed unneeded repository file.
            Removed the foreign key constraint for work in machining tool for work. Added foreign key constraint for work item in machining tool for work.
        </li>
        <li class="update-notes-li">
            Fixed cosmetic UI issue in machining tool for works details view.
        </li>
        <li class="update-notes-li">
            Added nullable version of the table relation change coming to tools for work (put reference to work item in addition to work- work will be phased out 
            as more of the new db schema is implemented).
        </li>
    </ul>


    @* ****** TODO ****** *@
    <div style="color:white;font-size:18px;">Todo</div>
    <ul style="font-size:14px;line-height:200%;">
        <li class="update-notes-li">
            Implement the same functinality for work orders as for jobs.
        </li>
        <li class="update-notes-li">
            Fix all parts for work (it broke because of the last deploy's changes)
        </li>
        <li class="update-notes-li">
            All parts for work -> add powder name and lot number to search filter functionality.
        </li>
        <li class="update-notes-li">
            PartsForWork -> want functionality to select columns to display then apply multiple to selected columns.
        </li>
        <li class="update-notes-li">
            PartsForJob -> Job part batch -> make name action link to apply attribute value to multiple parts for work.
        </li>
        <li class="update-notes-li">
            Remove 'hr:min:sec' portion of the due date in all places possible.
        </li>
        <li class="update-notes-li">
            Action tab -> completed work, upload pdf (PackingSlip), work completed date
        </li>

        <li class="update-notes-li">
            Keep writing Moq tests now that the controllers that are important accept an interface repo as a parameter.
        </li>
        <li class="update-notes-li">
            PowderForPart -> allow to choose year to filter by.
        </li>
        <li class="update-notes-li">
            Summary of powders by lot number.
        </li>
        <li class="update-notes-li">
            Start looking at making reports from database data.
        </li>
        <li class="update-notes-li">
            Write unit tests for all of the Utility methods. Write unit tests for the controllers.
        </li>

    </ul>

    @* ****** KNOWN ISSUES ****** *@
    


        <div style="color:white;font-size:18px;">Bugs and known issues</div>
            <ul style="font-size:14px;line-height:200%;">
                <li class="update-notes-li">
                    When editing a job quote, user cannot save changes because of an over-zealous uniqueness constraint.
                </li>
            </ul>
                    @*<li class="update-notes-li">
                Make form minimum width a little wider for form pages.
            </li>
                <li class="update-notes-li">
                    Some delete views have a UI flaw with the delete button not fitting on one line with action links.
                </li>
                <li class="update-notes-li">
                    From LineItem, when the user clicks manage powders, the bottle powder name is correctly set. If the user
                    navigates to a child view, and is forwarded back to index, the bottle powder name is no longer set.
                </li>
                <li class="update-notes-li">
                    User isn't set for PowderOrders.
                </li>
                <li class="update-notes-li">
                    Not all delete views have an indication whether other db items will be deleted as a result of the delete.
                </li>
                <li class="update-notes-li">
                    When a static part info is created (it has a customer fk reference), and then the customer fk entry is deleted,
                    an exception is thrown.
                </li>
                <li class="update-notes-li">
                    Some views do not have login protection implemented yet.
                </li>
            </ul>*@
        @* ****** OTHER CONSIDERATIONS ****** *@
        <!--<div style="color:white;font-size:18px;">Other considerations</div>
        <ul style="font-size:14px;line-height:200%;">
            <li class="update-notes-li">
                Under create and edit view, mark elements that are optional/required.
            </li>
            <li class="update-notes-li">
                Implement start suffix for part batch initialization?
            </li>
            <li class="update-notes-li">
                Put a '?' icon on all data access level views (any view that allows user to interact with the db in any way). When clicked,
                show a description of the view's purpose within the context of data access and work flow.
            </li>
            <li class="update-notes-li">
                Look at activity logging (or just logging) in ASP.NET EF Core.
            </li>
            <li class="update-notes-li">
                Look for a coded UI test library.
            </li>
            <li class="update-notes-li">
                Consider paging and which views to implement paging with.
            </li>
            <li class="update-notes-li">
                Consider search bar on views with many rows to filter.
            </li>
            <li class="update-notes-li">
                Help tab development.
            </li>
            <li class="update-notes-li">
                Style upload buttons and enum referenced dropdowns.
            </li>
        </ul>-->
</p>
